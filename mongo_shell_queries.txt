#some basic querying of the twitter data
#this is all to be run from the mongo shell

#set db
use project_4

#first create index on text
db.tweets.createIndex({text:"text"})

#now we can search it
db.tweets.find({$text:{$search:"data",$caseSensitive:false}},{"text":1}).pretty()

#the above used a projection
db.tweets.find({$text:{$search:"data",$caseSensitive:false},"user.screen_name":"dpatil"},{"text":1,"hashtag":1}).pretty()

db.tweets.find({"user.screen_name":"hmason","entities.hashtags":{$exists:true,$ne:[ ]}}).pretty()

#trying to query based on the entities.hashtags field
#making a multi key index
db.tweets.createIndex({"entities.hashtags":1})
db.tweets.find({$text:{$search: 'DataSciBowl',$caseSensitive:false}},{"entities.hashtags":1}).pretty()
db.tweets.find({$text:{$search: 'DataSciBowl',$caseSensitive:false}}).pretty()

#this works but cannot use wild cards
#instead we can try finding the hashtags in text
db.tweets.createIndex({text:"text"})
db.tweets.find({$text:{$search: '/.*#/.*'}},{"text":1}).pretty()

#count of tweets done in all languages that are present in the collection
db.tweets.aggregate([
  { $group: { 
     _id: '$lang',
     count: {$sum: 1}
  }},
  { $sort:{count:-1}}
]);

#counts of the top 5 hashtags
db.tweets.aggregate([ 
{$unwind: '$entities.hashtags'}, 

{ $group: { 
_id: '$entities.hashtags.text', 
tagCount: {$sum: 1} 
}}, 

{ $sort: { 
tagCount: -1 
}}, 

{ $limit: 5 }]);

#again without the limit
db.tweets.aggregate([ 
{$unwind: '$entities.hashtags'}, 
{ $group: { 
_id: '$entities.hashtags.text', 
tagCount: {$sum: 1} 
}}, 
{ $sort: { 
tagCount: -1 
}},]);

 : {"$gte": ISODate("2013-10-01T00:00:00.000Z")}

db.tweets.aggregate(
  [
    { $match : {$and [created_at: {$gte: ISODate("2013-10-01T00:00:00.000Z")},
	created_at: {$lte: ISODate("201-10-01T00:00:00.000Z")}]},
    { $group : { _id : { useragent: "$useragent", hour: "$hour" }, queriesPerUseragent: {$sum: 1} } }
  ]
);